# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_services:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [services/userService, services/busService, services/bookingService, services/notification, services/payment, apiGateway]
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
      working-directory: ${{ matrix.service }}

    - name: Build services
      run: npm run build --if-present
      working-directory: ${{ matrix.service }}

    - name: Run tests
      run: npm test --if-present
      working-directory: ${{ matrix.service }}

  docker_build_and_push:
    runs-on: ubuntu-latest
    needs: build_services

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest ./services/userService
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bus-service:latest ./services/busService
        docker build -t ${{ secrets.DOCKER_USERNAME }}/booking-service:latest ./services/bookingService
        docker build -t ${{ secrets.DOCKER_USERNAME }}/notification-service:latest ./services/notification
        docker build -t ${{ secrets.DOCKER_USERNAME }}/bookingApp-apiGateway:latest ./apiGateway

        docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/bus-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/booking-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/notification-service:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/bookingApp-apiGateway:latest
